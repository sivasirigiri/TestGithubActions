name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup MSBuild
      # This action adds MSBuild.exe to the PATH environment variable
      uses: microsoft/setup-msbuild@v2
      
    - name: Restore NuGet packages
      run: nuget restore TestGitHubActions.sln

    - name: Build solution
      # Use msbuild.exe to build the solution in Release configuration
      run: |
        msbuild.exe TestGitHubActions.sln /p:Configuration=Release
    - name: Publish web application
      run: |
        msbuild.exe TestGitHubActions.sln /p:Configuration=Release /p:DeployOnBuild=true /p:PublishProfile="FolderProfile"
      env:
        # Example using a GitHub Secret for a sensitive variable
        FolderProfile: ${{ secrets.PUBLISH_PROFILE_XML }}

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-app-release
        path: bin\app.publish\

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platform: windows/amd64

    - name: Log in to Docker Hub (or other registry)
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }} 
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ${{ github.workspace }} # Specifies the build context as the workspace
        file: ${{ github.workspace }}/Dockerfile # Path to your Dockerfile
        push: true # Set to true to push to a registry
        tags: ${{ secrets.DOCKER_USERNAME }}/testgithubactions:latest
        platforms: windows/amd64

        # - name: Build and Push
    #   shell: powershell
    #   env:
    #     REG_USER_NAME: ${{ secrets.DOCKERHUB_USERNAME }} # Assign the secret to an environment variable

      #run: |
       # Write-Host "Registry user name: $($env:REG_USER_NAME)"
       # docker build --build-arg GITHUB_WKSPC=${{ github.workspace }} -t testgithubactions:latest -f ${{ github.workspace }}/Dockerfile .
       # docker push testgithubactions:latest


      # run: |
      #     Write-Host "Registry user name: $($env:REG_USER_NAME)"
      #     $imageName = "${{ secrets.DOCKERHUB_USERNAME }}/testgithubactions:latest"
      #     Write-Host "Building Docker image: $imageName"
      #     docker build -t $imageName -f ${{ github.workspace }}/Dockerfile .
      #     Write-Host "Pushing Docker image: $imageName"
      #     docker push $imageName
